#!/usr/bin/env bash
set -euo pipefail

# ─────────────────────────────────────────────────────────────
# 🔒 Usage check
# ─────────────────────────────────────────────────────────────
if [[ -z "${1:-}" ]]; then
  echo "Usage: $0 <terraform-version> [terraform args...]"
  exit 1
fi

TF_VERSION="$1"
shift

# ─────────────────────────────────────────────────────────────
# 📦 Colima check (auto-start if Docker isn't running)
# ─────────────────────────────────────────────────────────────
if ! docker info >/dev/null 2>&1; then
  echo "▶️ Docker not running. Starting Colima..."
  colima start
fi

# ─────────────────────────────────────────────────────────────
# 📁 Modules path validation
# ─────────────────────────────────────────────────────────────
MODULES_PATH=$(realpath ../../modules)
if [[ ! -d "$MODULES_PATH" ]]; then
  echo "❌ Error: ../../modules directory does not exist at $MODULES_PATH"
  exit 1
fi

# ─────────────────────────────────────────────────────────────
# 🔧 Optional: Terraform 0.13 upgrade (once per workspace)
# ─────────────────────────────────────────────────────────────
if [[ "$TF_VERSION" == "0.13"* && "${1:-}" == "init" && ! -f ".terraform-version-upgraded" ]]; then
  echo "⚙️  Running terraform 0.13upgrade..."
  docker run --rm -it \
    --platform linux/amd64 \
    -v "$PWD":/workspace \
    -v "$MODULES_PATH":/workspace/../../modules \
    -w /workspace \
    devopscloudycontainers/terraform:"$TF_VERSION" 0.13upgrade .

  touch .terraform-version-upgraded
fi

# ─────────────────────────────────────────────────────────────
# ▶️ Run Terraform in container
# ─────────────────────────────────────────────────────────────
docker run --rm -it \
  --platform linux/amd64 \
  -v "$PWD":/workspace \
  -v "$MODULES_PATH":/workspace/../../modules \
  -v "$HOME/.aws:/root/.aws" \
  -e AWS_PROFILE="${AWS_PROFILE:-insurance-main-admin}" \
  -e MYSQL_PASSWORD="${MYSQL_PASSWORD:-}" \
  -e MYSQL_USERNAME="${MYSQL_USERNAME:-}" \
  -e MYSQL_ENDPOINT="${MYSQL_ENDPOINT:-}" \
  -w /workspace \
  devopscloudycontainers/terraform:"$TF_VERSION" "$@"
