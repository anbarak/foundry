#!/usr/bin/env bash
set -euo pipefail

echo "üì¶ Creating secrets backup..."

# Ensure backup log directory exists (safe for cron)
mkdir -p "$HOME/backup/secret_backup_logs"

# Define secrets to archive
backup_file="$HOME/sensitive_config_files.tar.gz"
cd "$HOME"

tar --exclude='.kube/cache' \
    --exclude='.aws/sso/cache' \
    --exclude='.aws/cli/cache' \
    --exclude='.gnupg/S.*' \
    --exclude='.gnupg/.gpg-connect_history' \
    --exclude='.gnupg/random_seed' \
    --exclude='.gnupg/private-keys-v1.d' \
    --exclude='.DS_Store' \
    --exclude='.ssh/known_hosts' \
    --exclude='*.lock' --exclude='*.tmp' --exclude='*.bak' \
    --exclude='*.[oO][lL][dD]*' \
    -czf "$backup_file" \
    .ssh .aws .saml2aws .kube .gnupg .vpn-configs \
    .gitconfig .gitconfig-centerfield

echo "üîê Uploading to Bitwarden..."

# Bitwarden login
BW_SESSION=$(bw unlock --raw)
export BW_SESSION

bw sync

item_id=$(bw list items --search "Sensitive Config Files Backup" --session "$BW_SESSION" | jq -r '.[0].id')

# Create item if missing
if [[ -z "$item_id" || "$item_id" == "null" ]]; then
  folder_id=$(bw list folders --session "$BW_SESSION" | jq -r '.[] | select(.name=="Personal-work") | .id')
  item_id=$(bw get template item | \
    jq --arg name "Sensitive Config Files Backup" --arg notes "Backup archive attached." --arg folder_id "$folder_id" \
    '.type = 2 | .secureNote.type = 0 | .name = $name | .notes = $notes | .folderId = $folder_id' | \
    bw encode | \
    bw create item --session "$BW_SESSION" | jq -r '.id')
fi

# Re-upload
bw delete attachment "sensitive_config_files.tar.gz" --itemid "$item_id" --session "$BW_SESSION" || true
bw create attachment --file "$backup_file" --itemid "$item_id" --session "$BW_SESSION"

echo "‚úÖ Backup uploaded. Cleaning up..."
rm -f "$backup_file"
